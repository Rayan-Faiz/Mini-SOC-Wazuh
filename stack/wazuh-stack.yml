# Base stack usable by both Swarm and local compose (v2)
# Compose v2 will accept deploy keys for local testing, but ignores Swarm-only semantics.

services:
  traefik:
    image: traefik:v3.1
    command:
      - "--api.dashboard=true"
      - "--providers.file.filename=/etc/traefik/traefik.yml"
      - "--providers.file.directory=/etc/traefik/dynamic"
      - "--entrypoints.websecure.address=:443"
      - "--serversTransport.insecureSkipVerify=true"
    ports:
      - "443:443"
      - "8080:8080" # Traefik dashboard
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./security/traefik/traefik.yml:/etc/traefik/traefik.yml:ro
      - ./security/traefik/dynamic.yml:/etc/traefik/dynamic/dynamic.yml:ro
      - traefik_letsencrypt:/letsencrypt
    deploy:
      placement:
        constraints: [node.role == manager]
    networks:
      - wazuh_front

  wazuh-indexer:
    image: wazuh/wazuh-indexer:4.8.2
    environment:
      - cluster.name=wazuh-cluster
      - discovery.type=single-node
      - node.name=wazuh-indexer
    healthcheck:
      test: ["CMD", "curl", "-k", "-f", "https://localhost:9200"]
      interval: 30s
      timeout: 10s
      retries: 10
    volumes:
      - wazuh_indexer_data:/var/lib/wazuh-indexer
      - ./wazuh-certificates/:/usr/share/wazuh-indexer/certs
    networks:
      - wazuh_back

  wazuh-manager:
    image: wazuh/wazuh-manager:4.8.2
    environment:
      - INDEXER_URL=https://wazuh-indexer:9200
    volumes:
      - wazuh_manager_data:/var/ossec/data
      - ./wazuh-certificates/:/etc/ssl/certs
    healthcheck:
      test: ["CMD", "bash", "-c", "ps aux | grep -q '[o]ssec-analysisd'"]
      interval: 30s
      timeout: 10s
      retries: 10
    networks:
      - wazuh_back

  wazuh-dashboard:
    image: wazuh/wazuh-dashboard:4.8.2
    depends_on:
      - wazuh-manager
      - wazuh-indexer
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.dashboard.entrypoints=websecure"
      - "traefik.http.routers.dashboard.rule=HostRegexp(`{host:.+}`)"
      - "traefik.http.services.dashboard.loadbalancer.server.port=5601"
    networks:
      - wazuh_front
      - wazuh_back
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure

volumes:
  wazuh_manager_data:
  wazuh_indexer_data:
  traefik_letsencrypt:

networks:
  wazuh_front:
  wazuh_back:
